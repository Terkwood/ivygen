environment:

  matrix:
    - name: win32
      platform: amd64_x86
      qt: 5.5\msvc2013
      suffix: msvc2013

    - name: win64
      platform: amd64
      qt: 5.5\msvc2013_64
      suffix: msvc2013

    #- name: win32
    #  plaftorm: mingw
    #  qt: 5.5\mingw492_32
    #  suffix: mingw

init:
  - set PATH=C:\Qt\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if not %suffix%==mingw call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" %platform%
  - if not %suffix%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")

clone_folder: c:\dev\ivygen

install:
  - choco install gitversion.portable -pre -y

before_build:
  - cd c:\dev\ivygen
  - ps: gitversion /l console /output buildserver
  - md build-release

build_script:
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - if %suffix%==mingw set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - if %suffix%==mingw set PATH=C:\Qt\Tools\mingw492_32\bin;%PATH%
  - cd build-release
  - cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="c:/dev/install"
  - if not %suffix%==mingw (nmake) else (mingw32-make)
  - if not %suffix%==mingw (nmake install) else (mingw32-make install)

after_build:
  - cd c:\dev\install\bin
  - windeployqt IvyGen.exe
  - cd c:\dev\install
  - set buildname=%APPVEYOR_BUILD_VERSION%
  - 7z a ..\ivygen\ivygen_%buildname%_%name%_%suffix%.7z bin lib data textures plugins
  - cd c:\dev\ivygen
  
artifacts:
  - path: '*.7z'